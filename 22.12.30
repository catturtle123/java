# 캡슐화
- 캡슐화란 외부 개체가 직접 개체 내의 데이터를 접근하지 못하게 금 하는 것이다.
- private로 멤버 변수를 외부에서는 접근하지 못하게 금 하여 구현한다.
- 객체 내의 멤버변수는 메서드를 통해서만 접근한다.
- this.a와 같이 this 뒤에 변수를 붙이는 것은 멤버변수를 뜻한다.

# 캡슐화의 장점
- 오류를 막아줄 논리를 만들 수 있다. ex) 속력은 양수여야한다. 등
- 외부 코드를 많이 수정할 필요가 없어진다.

# 추상화
- 추상화는 내부의 복잡한 구조를 몰라도 사용 방법만 알면 사용 가능 하게 금 한다는 것이다.

# 생성자
- 생성자는 객체를 생성할 때 초기값을 초기화 할수 있게 금 하는 것이다.
- 생성자를 만들때는 반환 타입은 설정하지 않고 클래스와 같은 이름으로 해야한다.
- 클래스내에 생성자를 만들지 않았을 경우 자바 컴파일러는 자동으로 디폴트 생성자를 만들어 준다. 만약 생성자를 만들었다면 디폴트 생성자는 없어진다.
- this()와 같은 모양은 다른 생성자를 뜻하는 것이다.
