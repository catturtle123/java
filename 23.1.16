# do while문
- do while문의 경우 while문 중 한번 이상 실행해야할 때 사용한다.
- do { 실행문 } while(조건) 의 형태이다.

#break와 continue
- break는 반복문을 끝내는 것이며 continue는 아래 코드를 무시하고 반복문을 실행하는 것이다.

# 자바의 참조 변수
- 참조 변수는 클래스의 인스턴스를 의미한다.
- 참조 변수는 변수의 값을 저장하고 있는 것이 아닌 참조 경로를 저장한다.
- 참조 변수는 일반 변수와 같이 stack에 저장되지만 참조 변수의 경우 값이 stack에 저장되지 않고 경로가 저장되며 실제 값은 heap에 저장된다.
- 참조 변수는 두 개의 객체가 다르다면 다르다고 나온다. (객체의 멤버변수의 값이 같아도 다르다고 나옴.)
- 두 개의 참조 변수의 참조 주소가 같다면 둘 중 하나의 값을 바꾸어도 같이 바뀜.

# String 클래스
- 스트링 리터럴은 String클래스의 인스턴스이다.
- 생성자 없이도 알아서 객체가 생성이 됨.
- substring이나 length, charAt, indexOf, contains, startsWith, endsWith, isEmpty, equals 등의 메서드를 가지고 있음. 

# String의 불변성
- String 값은 메모리에 생성된 이후로 바꿀 수 없음.
- concat, toUpperCase, toLowerCase, trim등의 메서드가 있으나 이들은 str의 값을 바꾸는 것이 아닌 str의 값을 이용하여 새로운 변수에 저장하는 것임.
- join이나 replace와 같은 것으로 표현할수도 있음.

# StringBuffer와 StringBuilder
- StringBuffer나 StringBuilder는 String을 대신하여 사용할 수 있음.
- 객체를 생성해주어야함.
- StringBuffer나 StringBuilder는 바꿀 수 있음. (String과는 다르게 불변이 아님)
- setCharAt, append등이 있음.
- StringBuilder는 부하가 적어서 기존의 문자열에 더하는 방식을 사용할 시 적합함.

# Wrapper Class
- Wrapper Class는 원시자료형에서 맨앞글자를 대문자로 바꾸면 됨.
- Wrapper Class의 메서드로 여러가지를 할수 있음. ex) 2진수로 바꾸기 등
- collection에 추가할 수 있음.

# wrapper class 생성
- 생성자와 valueOf로 생성할 수 있음.
- 생성자로 생성할 시 주소가 달라지나 valueOf로 생성할 시 heap에 원래 값이 있다면 참조하기 때문에 생성자로 생성한 것 끼리는 같지 않지만 valueOf끼리는 같음.
- valueOf가 heap에 있는 객체를 참조하기 때문에 일반적으로 생성자보다는 valueOf가 더 좋음.
- AutoBoxing이라는 기능은 원시 자료형처럼 지정하면 인스턴스를 만들어서 참조를 넣어줍니다. (valueOf처럼)

# 자바 Dates
- 자바의 시간을 나타내는 api에는 LocalDate, LocalTime, LocalDateTime등이 있다. 각각은 날짜, 시간, 날짜+시간을 나타낸다.

# LocalDate API
- LocalDate로 지정을 하고 여러가지 메서드들을 쓸수 있다.
- 대표적으로 윤년, 날짜 합차, 이번 년도, 월 등이 몇일 인지, 올해의 시작으로부터 몇일이 지났는지 등이 있다.
